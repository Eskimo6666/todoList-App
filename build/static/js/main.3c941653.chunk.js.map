{"version":3,"sources":["TodoInput.js","TodoItem.js","leanCloud.js","UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","e","this","props","onChange","type","onKeyPress","submit","bind","value","content","changeTitle","key","onSubmit","Component","TodoItem","onToggle","todo","onDelete","checked","status","toggle","className","title","onClick","delete","AV","init","appId","appKey","getCurrentUser","user","User","current","getUserFromAVUser","AVUser","id","attributes","UserDialog","state","selected","formData","username","password","setState","target","preventDefault","successFn","errorFn","setUsername","setPassword","signUp","then","loginedUser","call","error","console","log","onSignUp","alert","logIn","signIn","onSignIn","stateCopy","JSON","parse","stringify","signUpFrom","changeFormData","signInFrom","switch","App","newTodo","todoList","event","push","idMaker","deleted","logOut","todos","filter","item","map","index","signOut","addTodo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c941653.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class TodoInput extends Component {\r\n    changeTitle(e){\r\n        this.props.onChange(e)\r\n    }\r\n    render() {\r\n        return <input type=\"text\"\r\n            onKeyPress={this.submit.bind(this)}\r\n            value={this.props.content} \r\n            onChange = {this.changeTitle.bind(this)}/>\r\n    }\r\n    submit(e) {\r\n        if (e.key === 'Enter') {\r\n            this.props.onSubmit(e)\r\n        }\r\n    }\r\n}","import React,{Component} from 'react'\r\n\r\nexport default class TodoItem extends Component{\r\n    toggle(e){\r\n        this.props.onToggle(e,this.props.todo)  //把传过来的item传回去，父组件就知道是哪个被点击\r\n    }\r\n    delete(e){\r\n        this.props.onDelete(e,this.props.todo)\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <input type=\"checkbox\" checked={this.props.todo.status === 'completed'}\r\n                    onChange = {this.toggle.bind(this)}/>\r\n                <span className=\"title\">{this.props.todo.title}</span>\r\n                <button onClick = {this.delete.bind(this)}>删除</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import AV from 'leancloud-storage'\r\n\r\nvar APP_ID = '01jSqEgkjpKAfc7lBImOWcOs-gzGzoHsz';\r\nvar APP_KEY = 'iemSn7mX418ev0I3UuusA3hd';\r\n\r\nAV.init({\r\n  appId: APP_ID,\r\n  appKey: APP_KEY\r\n});\r\n\r\nexport default AV\r\n\r\nexport function signUp(username,password,successFn,errorFn){\r\n  //新建AVUser对象实例\r\n  var user = new AV.User()\r\n  //设置用户名\r\n  user.setUsername(username)\r\n  //设置密码\r\n  user.setPassword(password)\r\n  //设置邮箱\r\n  user.signUp().then(function(loginedUser){\r\n    let user = getUserFromAVUser(loginedUser)\r\n    successFn.call(null,user)\r\n  },function(error){\r\n    errorFn.call(null,error)\r\n  })\r\n  return undefined\r\n}\r\nexport function getCurrentUser(){\r\n  let user = AV.User.current()\r\n  if(user){\r\n    return getUserFromAVUser(user)\r\n  }else{\r\n    return null\r\n  }\r\n}\r\nexport function signIn(username,password,successFn,errorFn){\r\n  AV.User.logIn(username,password).then(function(loginedUser){\r\n    let user = getUserFromAVUser(loginedUser)\r\n    successFn.call(null,user)\r\n  },function(error){\r\n    errorFn.call(null,error)\r\n  })\r\n}\r\n\r\nexport function signOut(){\r\n  AV.User.logOut()\r\n  return undefined\r\n}\r\n\r\nfunction getUserFromAVUser(AVUser){\r\n  return{\r\n    id:AVUser.id,\r\n    ...AVUser.attributes\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport './UserDialog.css'\r\nimport {signUp,signIn} from './leanCloud'\r\n\r\nexport default class UserDialog extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            selected: 'signUp',\r\n            formData: {\r\n                username: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n    switch(e) {\r\n        this.setState({\r\n            selected: e.target.value\r\n        })\r\n    }\r\n    signUp(e) {\r\n        e.preventDefault()\r\n        let {username,password} = this.state.formData\r\n        let success = (user)=>{\r\n            console.log('user',user)\r\n            this.props.onSignUp.call(null,user)\r\n            alert('注册成功')\r\n        }\r\n        let error = (error)=>{\r\n            alert(error)\r\n        }\r\n        signUp(username,password,success,error)\r\n     }\r\n    signIn(e) {\r\n        e.preventDefault()\r\n        let {username,password} = this.state.formData\r\n        let success = (user)=>{\r\n            this.props.onSignIn.call(null,user)\r\n            alert('登陆成功')\r\n        }\r\n        let error = (error)=>{\r\n            alert(error)\r\n        }\r\n        signIn(username,password,success,error)\r\n     }\r\n    changeFormData(key,e){\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n        stateCopy.formData[key] = e.target.value\r\n        this.setState(stateCopy)\r\n    }\r\n    render() {\r\n        let signUpFrom = (\r\n            <form className=\"signUp\" onSubmit={this.signUp.bind(this)}>\r\n                <div className=\"row\">\r\n                    <label>用户名</label>\r\n                    <input type=\"text\" value={this.state.formData.username}\r\n                        onChange={this.changeFormData.bind(this,'username')} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>密码</label>\r\n                    <input type=\"password\" value = {this.state.formData.password}\r\n                    onChange = {this.changeFormData.bind(this,'password')}/>\r\n                </div>\r\n                <div className=\"row actions\">\r\n                    <button type=\"submit\">注册</button>\r\n                </div>\r\n            </form>\r\n        )\r\n        let signInFrom = (\r\n            <form className=\"signIn\" onSubmit={this.signIn.bind(this)}>\r\n                <div className=\"row\">\r\n                    <label>用户名</label>\r\n                    <input type=\"text\" value={this.state.formData.username}\r\n                    onChange={this.changeFormData.bind(this,'username')}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>密码</label>\r\n                    <input type=\"password\" value={this.state.formData.password}\r\n                    onChange={this.changeFormData.bind(this,'password')}/>\r\n                </div>\r\n                <div className=\"row actions\">\r\n                    <button type=\"submit\">登陆</button>\r\n                </div>\r\n            </form>\r\n        )\r\n        return (\r\n            <div className=\"UserDialog-Wrapper\">\r\n                <div className=\"UserDialog\">\r\n                    <nav>\r\n                        <label>\r\n                            <input type=\"radio\" value='signUp' \r\n                                checked={this.state.selected === 'signUp'} \r\n                                onChange = {this.switch.bind(this)}\r\n                        />注册</label>\r\n                        <label>\r\n                            <input type=\"radio\" value='signIn' \r\n                                checked={this.state.selected === 'signIn'} \r\n                                onChange={this.switch.bind(this)}\r\n                        />登陆</label>\r\n                    </nav>\r\n                    <div className=\"panes\">\r\n                        {this.state.selected === 'signUp' ? signUpFrom : null}\r\n                        {this.state.selected === 'signIn' ? signInFrom : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport 'normalize.css'\nimport './reset.css'\nimport './App.css'\nimport TodoInput from './TodoInput'\nimport TodoItem from './TodoItem'\nimport UserDialog from './UserDialog'\nimport { getCurrentUser, signOut } from './leanCloud'\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: getCurrentUser() || {},\n      newTodo: '',\n      todoList: []\n    }\n  }\n  componentDidUpdate() {\n\n  }\n  addTodo(event) {\n    this.state.todoList.push({\n      id: idMaker(),\n      title: event.target.value,\n      status: null,\n      deleted: false\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n\n  }\n  changeTitle(event) {\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n\n  }\n  toggle(e, todo) {\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    this.setState(this.state)\n\n  }\n  delete(e, todo) {\n    todo.deleted = true\n    this.setState(this.state)\n\n  }\n  onSignUp(user) {\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = user\n    console.log(22)\n    this.setState(stateCopy)\n  }\n  signOut() {\n    signOut()\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = {}\n    this.setState(stateCopy)\n  }\n  onSignIn(user){\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = user\n    this.setState(stateCopy)\n  }\n  render() {\n    let todos = this.state.todoList\n      .filter((item => !item.deleted))\n      .map((item, index) => {\n        return (\n          <li key={item.id}>\n            <TodoItem todo={item}\n              onToggle={this.toggle.bind(this)}\n              onDelete={this.delete.bind(this)} />\n          </li>\n        )\n      })\n    return (\n      <div className=\"App\">\n        <h1>{this.state.user.username || '我'}的待办\n          {this.state.user.id ? <button onClick={this.signOut.bind(this)}>登出</button> : null}\n        </h1>\n        <div className=\"inputWrapper\">\n          <h3>New Task</h3>\n          <TodoInput content={this.state.newTodo}\n            onSubmit={this.addTodo.bind(this)}\n            onChange={this.changeTitle.bind(this)} />\n        </div>\n        <div className=\"itemWrapper\">\n          <ol className=\"todolist\">\n            {todos}\n          </ol>\n          {this.state.user.id ?\n            null :\n            <UserDialog\n              onSignUp = {this.onSignUp.bind(this)} \n              onSignIn = {this.onSignIn.bind(this)}/>}\n        </div>\n\n      </div>\n    )\n  }\n}\n\nlet id = 0\nfunction idMaker() {\n  id += 1\n  return id\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}