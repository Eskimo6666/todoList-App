{"version":3,"sources":["TodoInput.js","TodoItem.js","leanCloud.js","SignUpForm.js","SignInForm.js","SignInOrSignUp.js","ForgotPasswordForm.js","UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["submit","props","e","key","target","value","trim","onSubmit","changeTitle","onChange","type","content","className","bind","onKeyPress","TodoItem","this","onToggle","todo","onDelete","checked","status","complated","toggle","title","onClick","delete","Component","AV","init","appId","appKey","TodoModel","create","successFn","errorFn","deleted","Object","extend","set","acl","ACL","setPublicReadAccess","setWriteAccess","User","current","setReadAccess","setACL","save","then","response","call","id","error","update","createWithoutData","undefined","destory","todoId","getByUser","user","query","Query","equalTo","find","array","map","t","attributes","getCurrentUser","getUserFromAVUser","AVUser","formData","email","username","password","href","onForgotPassword","SignInOrSignUp","state","selected","setState","switch","SignUpForm","onSignUp","SignInForm","onSignIn","ForgotPasswordForm","UserDialog","selectedTab","preventDefault","setUsername","setPassword","setEmail","signUp","loginedUser","console","log","alert","code","logIn","signIn","stateCopy","JSON","parse","stringify","requestPasswordReset","success","changeFormData","showForgotPassword","resetPassword","returnToSignIn","App","newTodo","todoList","todos","event","push","oldStatus","logOut","filter","item","index","signOut","TodoInput","addTodo","onSignUpOrSingnIn","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qVAEA,SAASA,EAAOC,EAAMC,GACL,UAAVA,EAAEC,KAC4B,KAA1BD,EAAEE,OAAOC,MAAMC,QACdL,EAAMM,SAASL,GAK3B,SAASM,EAAYP,EAAMC,GACvBD,EAAMQ,SAASP,GAGJ,eAAUD,GACrB,OAAO,2BAAOS,KAAK,OAAOL,MAAOJ,EAAMU,QACnCC,UAAY,YACZH,SAAYD,EAAYK,KAAK,KAAKZ,GAClCa,WAAcd,EAAOa,KAAK,KAAKZ,MChBlBc,E,+KACVb,GACHc,KAAKf,MAAMgB,SAASf,EAAEc,KAAKf,MAAMiB,Q,6BAE9BhB,GACHc,KAAKf,MAAMkB,SAASjB,EAAEc,KAAKf,MAAMiB,Q,+BAGjC,OACI,6BACI,2BAAOR,KAAK,WAAWU,SAA8C,IAArCJ,KAAKf,MAAMiB,KAAKG,OAAOC,UACnDb,SAAYO,KAAKO,OAAOV,KAAKG,QACjC,0BAAMJ,UAAU,SAASI,KAAKf,MAAMiB,KAAKM,OACzC,4BAAQC,QAAWT,KAAKU,OAAOb,KAAKG,OAApC,qB,GAbsBW,a,klBCGtCC,IAAGC,KAAK,CACNC,MAJW,oCAKXC,OAJY,6BAOCH,EAAf,EAoBO,IAAMI,EAAY,CACvBC,OADuB,WACUC,EAAWC,GAAS,IAA7Cd,EAA4C,EAA5CA,OAAQG,EAAoC,EAApCA,MAAOY,EAA6B,EAA7BA,QAEjBlB,EAAO,IADAU,IAAGS,OAAOC,OAAO,SAE5BpB,EAAKqB,IAAI,QAASf,GAClBN,EAAKqB,IAAI,SAAUlB,GACnBH,EAAKqB,IAAI,UAAWH,GAIpB,IAAII,EAAM,IAAIZ,IAAGa,IACjBD,EAAIE,qBAAoB,GACxBF,EAAIG,eAAef,IAAGgB,KAAKC,WAAW,GACtCL,EAAIM,cAAclB,IAAGgB,KAAKC,WAAW,GAErC3B,EAAK6B,OAAOP,GAEZtB,EAAK8B,OAAOC,KAAK,SAAUC,GACzBhB,EAAUiB,KAAK,KAAMD,EAASE,KAC7B,SAAUC,GACXlB,GAAWA,EAAQgB,KAAK,KAAME,MAKlCC,OAzBuB,WAyBcpB,EAAWC,GAAS,IAAjDiB,EAAgD,EAAhDA,GAAI5B,EAA4C,EAA5CA,MAAOH,EAAqC,EAArCA,OAAQe,EAA6B,EAA7BA,QACrBlB,EAAOU,IAAGS,OAAOkB,kBAAkB,OAAQH,QACrCI,IAAVhC,GAAuBN,EAAKqB,IAAI,QAASf,QAC9BgC,IAAXnC,GAAwBH,EAAKqB,IAAI,SAAUlB,QAC/BmC,IAAZpB,GAAyBlB,EAAKqB,IAAI,UAAWH,GAC7ClB,EAAK8B,OAAOC,KAAK,SAACC,GAChBhB,GAAaA,EAAUiB,KAAK,OAC3B,SAACE,GAAD,OAAWlB,GAAWA,EAAQgB,KAAK,KAAME,MAE9CI,QAlCuB,SAkCfC,EAAQxB,EAAWC,GACzBH,EAAUsB,OAAO,CAACF,GAAIM,EAAQtB,SAAS,GAAOF,EAAWC,IAE3DwB,UArCuB,SAqCbC,EAAM1B,EAAWC,GACzB,IAAI0B,EAAQ,IAAIjC,IAAGkC,MAAM,QACzBD,EAAME,QAAQ,WAAW,GACzBF,EAAMG,OAAOf,KAAK,SAACC,GACjB,IAAIe,EAAQf,EAASgB,IAAI,SAACC,GACxB,OAAO,EAAP,CAASf,GAAIe,EAAEf,IAAOe,EAAEC,cAE1BlC,EAAUiB,KAAK,KAAMc,IACpB,SAACZ,GACFlB,GAAWA,EAAQgB,KAAK,KAAME,OAO7B,SAASgB,IACd,IAAIT,EAAOhC,IAAGgB,KAAKC,UACnB,OAAIe,EACKU,EAAkBV,GAElB,KAyBX,SAASU,EAAkBC,GACzB,OAAO,EAAP,CACEnB,GAAImB,EAAOnB,IACRmB,EAAOH,YClHC,eAAUnE,GACrB,OACI,0BAAMW,UAAU,SAASL,SAAUN,EAAMM,SAASM,KAAKG,OACnD,yBAAKJ,UAAU,OACX,+CACA,2BAAOF,KAAK,OAAOL,MAAOJ,EAAMuE,SAASC,MACrChE,SAAUR,EAAMQ,SAASI,KAAK,KAAM,YAE5C,yBAAKD,UAAU,OACX,qDACA,2BAAOF,KAAK,OAAOL,MAAOJ,EAAMuE,SAASE,SACrCjE,SAAUR,EAAMQ,SAASI,KAAK,KAAM,eAE5C,yBAAKD,UAAU,OACX,+CACA,2BAAOF,KAAK,WAAWL,MAAOJ,EAAMuE,SAASG,SACzClE,SAAUR,EAAMQ,SAASI,KAAK,KAAM,eAE5C,yBAAKD,UAAU,eACX,4BAAQF,KAAK,UAAb,mBCpBD,WAAUT,GACrB,OACI,0BAAMW,UAAU,SAASL,SAAUN,EAAMM,UACrC,yBAAKK,UAAU,OACX,qDACA,2BAAOF,KAAK,OAAOL,MAAOJ,EAAMuE,SAASE,SACrCjE,SAAUR,EAAMQ,SAASI,KAAK,KAAM,eAE5C,yBAAKD,UAAU,OACX,+CACA,2BAAOF,KAAK,WAAWL,MAAOJ,EAAMuE,SAASG,SACzClE,SAAUR,EAAMQ,SAASI,KAAK,KAAM,eAE5C,yBAAKD,UAAU,eACX,4BAAQF,KAAK,UAAb,gBACA,uBAAGkE,KAAK,IAAInD,QAASxB,EAAM4E,iBAAiBhE,KAAK,OAAjD,+BCVKiE,E,YACjB,WAAY7E,GAAQ,IAAD,8BACf,4CAAMA,KACD8E,MAAQ,CACTC,SAAU,UAHC,E,oEAMZ9E,GACHc,KAAKiE,SAAS,CACVD,SAAU9E,EAAEE,OAAOC,U,+BAIvB,OACI,yBAAKO,UAAU,kBACX,6BACI,+BACI,2BAAOF,KAAK,QAAQL,MAAM,SACtBe,QAAiC,WAAxBJ,KAAK+D,MAAMC,SACpBvE,SAAUO,KAAKkE,OAAOrE,KAAKG,QAHnC,gBAKA,+BACI,2BAAON,KAAK,QAAQL,MAAM,SACtBe,QAAiC,WAAxBJ,KAAK+D,MAAMC,SACpBvE,SAAUO,KAAKkE,OAAOrE,KAAKG,QAHnC,iBAMJ,yBAAKJ,UAAU,SACc,WAAxBI,KAAK+D,MAAMC,SACR,kBAACG,EAAD,CACIX,SAAUxD,KAAKf,MAAMuE,SACrBjE,SAAUS,KAAKf,MAAMmF,SACrB3E,SAAUO,KAAKf,MAAMQ,WAEvB,KACmB,WAAxBO,KAAK+D,MAAMC,SACR,kBAACK,EAAD,CACIb,SAAUxD,KAAKf,MAAMuE,SACrBjE,SAAUS,KAAKf,MAAMqF,SACrB7E,SAAUO,KAAKf,MAAMQ,SACrBoE,iBAAkB7D,KAAKf,MAAM4E,mBAC/B,W,GAzCkBlD,aCHvB4D,E,iLAEb,OACI,yBAAK3E,UAAU,kBACX,wDACA,0BAAMA,UAAU,iBAAiBL,SAAUS,KAAKf,MAAMM,UAClD,yBAAKK,UAAU,OACX,+CACA,2BAAOF,KAAK,OAAOL,MAAOW,KAAKf,MAAMuE,SAASC,MAC1ChE,SAAUO,KAAKf,MAAMQ,SAASI,KAAK,KAAM,YAEjD,yBAAKD,UAAU,eACX,4BAAQF,KAAK,UAAb,wCACA,uBAAGkE,KAAK,IAAInD,QAAST,KAAKf,MAAMqF,UAAhC,mC,GAbwB3D,aCK3B6D,E,YACjB,aAAe,IAAD,8BACV,+CACKT,MAAQ,CACTU,YAAa,iBACbjB,SAAU,CACNC,MAAO,GACPC,SAAU,GACVC,SAAU,KAPR,E,oEAWPzE,GAAI,IAAD,OACNA,EAAEwF,iBADI,MAE8B1E,KAAK+D,MAAMP,SAAzCE,EAFA,EAEAA,SAAUC,EAFV,EAEUA,ULVjB,SAAgBF,EAAOC,EAAUC,EAAUzC,EAAWC,GAE3D,IAAIyB,EAAO,IAAIhC,IAAGgB,KAElBgB,EAAK+B,YAAYjB,GAEjBd,EAAKgC,YAAYjB,GAEjBf,EAAKiC,SAASpB,GACdb,EAAKkC,SAAS7C,KAAK,SAAU8C,GAC3B,IAAInC,EAAOU,EAAkByB,GAC7B7D,EAAUiB,KAAK,KAAMS,IACpB,SAAUP,GACXlB,EAAQgB,KAAK,KAAME,KKcfyC,CAnBM,EAEoBrB,MAiBZC,EAAUC,EAhBV,SAACf,GACXoC,QAAQC,IAAI,OAAQrC,GACpB,EAAK3D,MAAMmF,SAASjC,KAAK,KAAMS,GAC/BsC,MAAM,6BAEE,SAAC7C,GAET,OAAQA,EAAM8C,MACV,KAAK,IACDD,MAAM,8CACN,MACJ,QACIA,MAAM7C,Q,6BAMfnD,GAAI,IAAD,OACNA,EAAEwF,iBADI,MAEuB1E,KAAK+D,MAAMP,ULgDzC,SAAgBE,EAAUC,EAAUzC,EAAWC,GACpDP,IAAGgB,KAAKwD,MAAM1B,EAAUC,GAAU1B,KAAK,SAAU8C,GAC/C,IAAInC,EAAOU,EAAkByB,GAC7B7D,EAAUiB,KAAK,KAAMS,IACpB,SAAUP,GACXlB,EAAQgB,KAAK,KAAME,KKrCfgD,CAlBM,EAEA3B,SAFA,EAEUC,SACF,SAACf,GACX,EAAK3D,MAAMqF,SAASnC,KAAK,KAAMS,GAC/BsC,MAAM,6BAEE,SAAC7C,GAET,OAAQA,EAAM8C,MACV,KAAK,IACDD,MAAM,0DACN,MACJ,QACIA,MAAM7C,Q,qCAMPlD,EAAKD,GAChB,IAAIoG,EAAYC,KAAKC,MAAMD,KAAKE,UAAUzF,KAAK+D,QAC/CuB,EAAU9B,SAASrE,GAAOD,EAAEE,OAAOC,MACnCW,KAAKiE,SAASqB,K,2CAGd,IAAIA,EAAYC,KAAKC,MAAMD,KAAKE,UAAUzF,KAAK+D,QAC/CuB,EAAUb,YAAc,iBACxBzE,KAAKiE,SAASqB,K,oCAEJpG,GLkCX,IAAgCuE,EAAOvC,EAAWC,EKjCjDjC,EAAEwF,iBLiC6BjB,EKhCRzD,KAAK+D,MAAMP,SAASC,MLiCjD7C,IAAGgB,KAAK8D,qBAAqBjC,GAAOxB,KAAK,SAAU0D,GACjDzE,EAAUiB,QACT,SAAUE,GACXlB,EAAQgB,KAAK,KAAME,O,uCKjCf,IAAIiD,EAAYC,KAAKC,MAAMD,KAAKE,UAAUzF,KAAK+D,QAC/CuB,EAAUb,YAAc,iBACxBzE,KAAKiE,SAASqB,K,+BAGd,OACI,yBAAK1F,UAAU,sBACX,yBAAKA,UAAU,cACiB,mBAA3BI,KAAK+D,MAAMU,YACR,kBAAC,EAAD,CACIjB,SAAUxD,KAAK+D,MAAMP,SACrBc,SAAUtE,KAAKqF,OAAOxF,KAAKG,MAC3BoE,SAAUpE,KAAK8E,OAAOjF,KAAKG,MAC3BP,SAAUO,KAAK4F,eAAe/F,KAAKG,MACnC6D,iBAAkB7D,KAAK6F,mBAAmBhG,KAAKG,QAEnD,kBAAC,EAAD,CACIwD,SAAUxD,KAAK+D,MAAMP,SACrBjE,SAAUS,KAAK8F,cAAcjG,KAAKG,MAClCP,SAAUO,KAAK4F,eAAe/F,KAAKG,MACnCsE,SAAUtE,KAAK+F,eAAelG,KAAKG,c,GAxFvBW,aC+HzBqF,E,YAzHb,WAAY/G,GAAQ,IAAD,uBACjB,4CAAMA,KACD8E,MAAQ,CACXnB,KAAMS,KAAoB,GAC1B4C,QAAS,GACTC,SAAU,IAEZ,IAAItD,EAAOS,IAPM,OAQbT,GACF5B,EAAU2B,UAAUC,EAAK,SAACuD,GACxBnB,QAAQC,IAAIkB,GACZ,IAAIb,EAAYC,KAAKC,MAAMD,KAAKE,UAAU,EAAK1B,QAC/CuB,EAAUY,SAAWC,EACrB,EAAKlC,SAASqB,KAbD,E,mHAqBXc,GAAO,IAAD,OACRH,EAAU,CACZzF,MAAO4F,EAAMhH,OAAOC,MACpBgB,OAAQ,CAACC,WAAU,GACnBc,SAAS,GAEXJ,EAAUC,OAAOgF,EAAS,SAAC7D,GACzB6D,EAAQ7D,GAAKA,EACb,EAAK2B,MAAMmC,SAASG,KAAKJ,GACzB,EAAKhC,SAAS,CACZgC,QAAS,GACTC,SAAU,EAAKnC,MAAMmC,YAEtB,SAAC7D,GACF2C,QAAQC,IAAI5C,O,kCAIJ+D,GACVpG,KAAKiE,SAAS,CACZgC,QAASG,EAAMhH,OAAOC,MACtB6G,SAAUlG,KAAK+D,MAAMmC,a,6BAIlBhH,EAAGgB,GAAM,IAAD,OACToG,EAAYpG,EAAKG,OACrB2E,QAAQC,IAAI/E,GACZA,EAAKG,OAAOC,WAAqC,IAAzBJ,EAAKG,OAAOC,UACpCU,EAAUsB,OAAOpC,EAAM,WACrB,EAAK+D,SAAS,EAAKF,QAClB,SAAC1B,GACF2C,QAAQC,IAAI5C,GACZnC,EAAKG,OAASiG,EACd,EAAKrC,SAAS,EAAKF,W,6BAGhB7E,EAAGgB,GAAO,IAAD,OACdc,EAAUyB,QAAQvC,EAAKkC,GAAG,WACxBlC,EAAKkB,SAAU,EACf,EAAK6C,SAAS,EAAKF,W,wCAILnB,GAChB,IAAI0C,EAAYC,KAAKC,MAAMD,KAAKE,UAAUzF,KAAK+D,QAC/CuB,EAAU1C,KAAOA,EACjB5C,KAAKiE,SAASqB,K,gCNmBhB1E,IAAGgB,KAAK2E,SMfNvB,QAAQC,IAAI,OACZ,IAAIK,EAAYC,KAAKC,MAAMD,KAAKE,UAAUzF,KAAK+D,QAC/CuB,EAAU1C,KAAO,GACjB0C,EAAUY,SAAW,GACrBlB,QAAQC,IAAI,IACZjF,KAAKiE,SAASqB,K,+BAGN,IAAD,OACHa,EAAQnG,KAAK+D,MAAMmC,SACpBM,OAAQ,SAAAC,GAAI,OAAKA,EAAKrF,UACtB8B,IAAI,SAACuD,EAAMC,GACV,OACE,wBAAIvH,IAAKsH,EAAKrE,IACZ,kBAAC,EAAD,CAAUlC,KAAMuG,EACdxG,SAAU,EAAKM,OAAOV,KAAK,GAC3BM,SAAU,EAAKO,OAAOb,KAAK,QAIrC,OACE,yBAAKD,UAAU,OACb,4BAAKI,KAAK+D,MAAMnB,KAAKc,UAAY,SAAjC,qBACG1D,KAAK+D,MAAMnB,KAAKR,GAAK,4BAAQ3B,QAAST,KAAK2G,QAAQ9G,KAAKG,OAAnC,gBAAwD,MAEhF,yBAAKJ,UAAU,gBACb,wCACA,kBAACgH,EAAD,CAAWjH,QAASK,KAAK+D,MAAMkC,QAC7B1G,SAAUS,KAAK6G,QAAQhH,KAAKG,MAC5BP,SAAUO,KAAKR,YAAYK,KAAKG,SAEpC,yBAAKJ,UAAU,eACb,wBAAIA,UAAU,YACXuG,GAEFnG,KAAK+D,MAAMnB,KAAKR,GACf,KACA,kBAAC,EAAD,CACEgC,SAAUpE,KAAK8G,kBAAkBjH,KAAKG,MACtCsE,SAAUtE,KAAK8G,kBAAkBjH,KAAKG,c,GAhHlCW,aCDEoG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzF,KAAK,SAAA0F,GACjCA,EAAaC,iB","file":"static/js/main.7781c3b5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction submit(props,e){\r\n    if(e.key === 'Enter'){\r\n        if(e.target.value.trim() !== ''){\r\n            props.onSubmit(e)\r\n        }    \r\n    }\r\n}\r\n\r\nfunction changeTitle(props,e){\r\n    props.onChange(e)\r\n}\r\n\r\nexport default function (props){\r\n    return <input type=\"text\" value={props.content}\r\n        className = 'TodoInput'\r\n        onChange = {changeTitle.bind(null,props)}\r\n        onKeyPress = {submit.bind(null,props)}/>\r\n}","import React,{Component} from 'react'\r\n\r\nexport default class TodoItem extends Component{\r\n    toggle(e){\r\n        this.props.onToggle(e,this.props.todo)  //把传过来的item传回去，父组件就知道是哪个被点击\r\n    }\r\n    delete(e){\r\n        this.props.onDelete(e,this.props.todo)\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <input type=\"checkbox\" checked={this.props.todo.status.complated === true}\r\n                    onChange = {this.toggle.bind(this)}/>\r\n                <span className=\"title\">{this.props.todo.title}</span>\r\n                <button onClick = {this.delete.bind(this)}>删除</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import AV from 'leancloud-storage'\r\n\r\nvar APP_ID = '01jSqEgkjpKAfc7lBImOWcOs-gzGzoHsz';\r\nvar APP_KEY = 'iemSn7mX418ev0I3UuusA3hd';\r\n\r\nAV.init({\r\n  appId: APP_ID,\r\n  appKey: APP_KEY\r\n});\r\n\r\nexport default AV\r\n\r\nexport function signUp(email, username, password, successFn, errorFn) {\r\n  //新建AVUser对象实例\r\n  var user = new AV.User()\r\n  //设置用户名\r\n  user.setUsername(username)\r\n  //设置密码\r\n  user.setPassword(password)\r\n  //设置邮箱\r\n  user.setEmail(email)\r\n  user.signUp().then(function (loginedUser) {\r\n    let user = getUserFromAVUser(loginedUser)\r\n    successFn.call(null, user)\r\n  }, function (error) {\r\n    errorFn.call(null, error)\r\n  })\r\n  return undefined\r\n}\r\n\r\nexport const TodoModel = {\r\n  create({status, title, deleted}, successFn, errorFn){\r\n    let Todo = AV.Object.extend('Todo') // 记得把多余的分号删掉，我讨厌分号\r\n    let todo = new Todo()\r\n    todo.set('title', title)\r\n    todo.set('status', status)\r\n    todo.set('deleted', deleted)\r\n\r\n    // 根据文档 https://leancloud.cn/docs/acl-guide.html#单用户权限设置\r\n    // 这样做就可以让这个 Todo 只被当前用户看到\r\n    let acl = new AV.ACL()\r\n    acl.setPublicReadAccess(false) // 注意这里是 false\r\n    acl.setWriteAccess(AV.User.current(), true)\r\n    acl.setReadAccess(AV.User.current(), true)\r\n\r\n    todo.setACL(acl);\r\n\r\n    todo.save().then(function (response) {\r\n      successFn.call(null, response.id)\r\n    }, function (error) {\r\n      errorFn && errorFn.call(null, error)\r\n    });\r\n\r\n  },\r\n\r\n  update({id, title, status, deleted}, successFn, errorFn){\r\n    let todo = AV.Object.createWithoutData('Todo', id)\r\n    title !== undefined && todo.set('title', title)\r\n    status !== undefined && todo.set('status', status)\r\n    deleted !== undefined && todo.set('deleted', deleted)\r\n    todo.save().then((response) => {\r\n      successFn && successFn.call(null)\r\n    }, (error) => errorFn && errorFn.call(null, error))\r\n  },\r\n  destory(todoId, successFn, errorFn) {\r\n    TodoModel.update({id: todoId, deleted: true}, successFn, errorFn)\r\n  },\r\n  getByUser(user, successFn, errorFn) {\r\n    let query = new AV.Query('Todo')\r\n    query.equalTo('deleted', false);\r\n    query.find().then((response) => {\r\n      let array = response.map((t) => {\r\n        return { id: t.id, ...t.attributes }\r\n      })\r\n      successFn.call(null, array)\r\n    }, (error) => {\r\n      errorFn && errorFn.call(null, error)\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function getCurrentUser() {\r\n  let user = AV.User.current()\r\n  if (user) {\r\n    return getUserFromAVUser(user)\r\n  } else {\r\n    return null\r\n  }\r\n}\r\nexport function signIn(username, password, successFn, errorFn) {\r\n  AV.User.logIn(username, password).then(function (loginedUser) {\r\n    let user = getUserFromAVUser(loginedUser)\r\n    successFn.call(null, user)\r\n  }, function (error) {\r\n    errorFn.call(null, error)\r\n  })\r\n}\r\n\r\nexport function signOut() {\r\n  AV.User.logOut()\r\n  return undefined\r\n}\r\n\r\nexport function sendPasswordResetEmail(email, successFn, errorFn) {\r\n  AV.User.requestPasswordReset(email).then(function (success) {\r\n    successFn.call()\r\n  }, function (error) {\r\n    errorFn.call(null, error)\r\n  })\r\n}\r\n\r\nfunction getUserFromAVUser(AVUser) {\r\n  return {\r\n    id: AVUser.id,\r\n    ...AVUser.attributes\r\n  }\r\n}","import React from 'react'\r\n\r\nexport default function (props) {\r\n    return (\r\n        <form className=\"signUp\" onSubmit={props.onSubmit.bind(this)}>\r\n            <div className=\"row\">\r\n                <label>邮箱</label>\r\n                <input type=\"text\" value={props.formData.email}\r\n                    onChange={props.onChange.bind(null, 'email')} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <label>用户名</label>\r\n                <input type=\"text\" value={props.formData.username}\r\n                    onChange={props.onChange.bind(null, 'username')} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <label>密码</label>\r\n                <input type=\"password\" value={props.formData.password}\r\n                    onChange={props.onChange.bind(null, 'password')} />\r\n            </div>\r\n            <div className=\"row actions\">\r\n                <button type=\"submit\">注册</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nexport default function (props) {\r\n    return (\r\n        <form className=\"signIn\" onSubmit={props.onSubmit}>\r\n            <div className=\"row\">\r\n                <label>用户名</label>\r\n                <input type=\"text\" value={props.formData.username}\r\n                    onChange={props.onChange.bind(null, 'username')} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <label>密码</label>\r\n                <input type=\"password\" value={props.formData.password}\r\n                    onChange={props.onChange.bind(null, 'password')} />\r\n            </div>\r\n            <div className=\"row actions\">\r\n                <button type=\"submit\">登陆</button>\r\n                <a href=\"#\" onClick={props.onForgotPassword.bind(null)}>找回密码</a>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, { Component } from \"react\"\r\n\r\nimport SignUpForm from './SignUpForm'\r\n\r\nimport SignInForm from './SignInForm'\r\n\r\nexport default class SignInOrSignUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selected: 'signUp'\r\n        }\r\n    }\r\n    switch(e) {\r\n        this.setState({\r\n            selected: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"signInOrSignUp\">\r\n                <nav>\r\n                    <label>\r\n                        <input type=\"radio\" value='signUp'\r\n                            checked={this.state.selected === 'signUp'}\r\n                            onChange={this.switch.bind(this)}\r\n                        />注册</label>\r\n                    <label>\r\n                        <input type=\"radio\" value='signIn'\r\n                            checked={this.state.selected === 'signIn'}\r\n                            onChange={this.switch.bind(this)}\r\n                        />登陆</label>\r\n                </nav>\r\n                <div className=\"panes\">\r\n                    {this.state.selected === 'signUp' ?\r\n                        <SignUpForm\r\n                            formData={this.props.formData}\r\n                            onSubmit={this.props.onSignUp}\r\n                            onChange={this.props.onChange}\r\n                        />\r\n                        : null}\r\n                    {this.state.selected === 'signIn' ?\r\n                        <SignInForm\r\n                            formData={this.props.formData}\r\n                            onSubmit={this.props.onSignIn}\r\n                            onChange={this.props.onChange}\r\n                            onForgotPassword={this.props.onForgotPassword} />\r\n                        : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default class ForgotPasswordForm extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"forgotPassword\">\r\n                <h3>重置密码</h3>\r\n                <form className=\"forgotPassword\" onSubmit={this.props.onSubmit}>\r\n                    <div className=\"row\">\r\n                        <label>邮箱</label>\r\n                        <input type=\"text\" value={this.props.formData.email}\r\n                            onChange={this.props.onChange.bind(null, 'email')} />\r\n                    </div>\r\n                    <div className=\"row actions\">\r\n                        <button type=\"submit\">发送重置邮件</button>\r\n                        <a href=\"#\" onClick={this.props.onSignIn}>返回登陆</a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './UserDialog.css'\r\nimport { signUp, signIn, sendPasswordResetEmail } from './leanCloud'\r\n\r\nimport SignInOrSignUp from './SignInOrSignUp'\r\nimport ForgotPasswordForm from './ForgotPasswordForm'\r\n\r\n\r\nexport default class UserDialog extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            selectedTab: 'signInOrSignUp',\r\n            formData: {\r\n                email: '',\r\n                username: '',\r\n                password: '',\r\n            }\r\n        }\r\n    }\r\n    signUp(e) {\r\n        e.preventDefault()\r\n        let { username, password, email } = this.state.formData\r\n        let success = (user) => {\r\n            console.log('user', user)\r\n            this.props.onSignUp.call(null, user)\r\n            alert('注册成功')\r\n        }\r\n        let error = (error) => {\r\n\r\n            switch (error.code) {\r\n                case 202:\r\n                    alert('用户名已被占用')\r\n                    break;\r\n                default:\r\n                    alert(error)\r\n                    break;\r\n            }\r\n        }\r\n        signUp(email, username, password, success, error)\r\n    }\r\n    signIn(e) {\r\n        e.preventDefault()\r\n        let { username, password } = this.state.formData\r\n        let success = (user) => {\r\n            this.props.onSignIn.call(null, user)\r\n            alert('登陆成功')\r\n        }\r\n        let error = (error) => {\r\n\r\n            switch (error.code) {\r\n                case 210:\r\n                    alert('用户名与密码不匹配')\r\n                    break;\r\n                default:\r\n                    alert(error)\r\n            }\r\n\r\n        }\r\n        signIn(username, password, success, error)\r\n    }\r\n    changeFormData(key, e) {\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n        stateCopy.formData[key] = e.target.value\r\n        this.setState(stateCopy)\r\n    }\r\n    showForgotPassword() {\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n        stateCopy.selectedTab = 'forgotPassword'\r\n        this.setState(stateCopy)\r\n    }\r\n    resetPassword(e) {\r\n        e.preventDefault()\r\n        sendPasswordResetEmail(this.state.formData.email)\r\n    }\r\n    returnToSignIn() {\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\r\n        stateCopy.selectedTab = 'signInOrSignUp'\r\n        this.setState(stateCopy)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"UserDialog-Wrapper\">\r\n                <div className=\"UserDialog\">\r\n                    {this.state.selectedTab === 'signInOrSignUp' ?\r\n                        <SignInOrSignUp\r\n                            formData={this.state.formData}\r\n                            onSignIn={this.signIn.bind(this)}\r\n                            onSignUp={this.signUp.bind(this)}\r\n                            onChange={this.changeFormData.bind(this)}\r\n                            onForgotPassword={this.showForgotPassword.bind(this)}\r\n                        /> :\r\n                        <ForgotPasswordForm\r\n                            formData={this.state.formData}\r\n                            onSubmit={this.resetPassword.bind(this)}\r\n                            onChange={this.changeFormData.bind(this)}\r\n                            onSignIn={this.returnToSignIn.bind(this)}\r\n                        />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport 'normalize.css'\nimport './reset.css'\nimport './App.css'\nimport TodoInput from './TodoInput'\nimport TodoItem from './TodoItem'\nimport UserDialog from './UserDialog'\nimport { getCurrentUser, signOut, TodoModel } from './leanCloud'\n\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: getCurrentUser() || {},\n      newTodo: '',\n      todoList: []\n    }\n    let user = getCurrentUser()\n    if (user) {\n      TodoModel.getByUser(user,(todos)=>{\n        console.log(todos)\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\n        stateCopy.todoList = todos\n        this.setState(stateCopy)\n      })\n    }\n  }\n\n  componentDidUpdate() {\n\n  }\n  addTodo(event){\n    let newTodo = {\n      title: event.target.value,\n      status: {complated:false},\n      deleted: false\n    }\n    TodoModel.create(newTodo, (id) => {\n      newTodo.id = id\n      this.state.todoList.push(newTodo)\n      this.setState({\n        newTodo: '',\n        todoList: this.state.todoList\n      })\n    }, (error) => {\n      console.log(error)\n    })\n  }\n\n  changeTitle(event) {\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n\n  }\n  toggle(e, todo){\n    let oldStatus = todo.status\n    console.log(todo)\n    todo.status.complated = todo.status.complated ===true  ? false : true\n    TodoModel.update(todo, () => {\n      this.setState(this.state)\n    }, (error) => {\n      console.log(error)\n      todo.status = oldStatus\n      this.setState(this.state)\n    })\n  }\n  delete(e, todo) {\n    TodoModel.destory(todo.id,()=>{\n      todo.deleted = true\n      this.setState(this.state)\n    })\n  }\n\n  onSignUpOrSingnIn(user) {\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = user\n    this.setState(stateCopy)\n  }\n  signOut() {\n    signOut()\n    console.log('out')\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = {}\n    stateCopy.todoList = []\n    console.log(33)\n    this.setState(stateCopy)\n  }\n\n  render() {\n    let todos = this.state.todoList\n      .filter((item => !item.deleted))\n      .map((item, index) => {\n        return (\n          <li key={item.id}>\n            <TodoItem todo={item}\n              onToggle={this.toggle.bind(this)}\n              onDelete={this.delete.bind(this)} />\n          </li>\n        )\n      })\n    return (\n      <div className=\"App\">\n        <h1>{this.state.user.username || '我'}的待办\n          {this.state.user.id ? <button onClick={this.signOut.bind(this)}>登出</button> : null}\n        </h1>\n        <div className=\"inputWrapper\">\n          <h3>New Task</h3>\n          <TodoInput content={this.state.newTodo}\n            onSubmit={this.addTodo.bind(this)}\n            onChange={this.changeTitle.bind(this)} />\n        </div>\n        <div className=\"itemWrapper\">\n          <ol className=\"todolist\">\n            {todos}\n          </ol>\n          {this.state.user.id ?\n            null :\n            <UserDialog\n              onSignUp={this.onSignUpOrSingnIn.bind(this)}\n              onSignIn={this.onSignUpOrSingnIn.bind(this)} />}\n        </div>\n\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}